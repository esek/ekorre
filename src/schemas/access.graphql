
type Query {
    individualAccess(username: String!): Access
    postAccess(postname: String!): Access
    features: [Feature!]!
    doors: [Door!]!
}

type Mutation {
    setIndividualAccess(username: String!, access: AccessInput!): Boolean!
    setPostAccess(postname: String!, access: AccessInput!): Boolean!
}

"Access will be treated as a immutable object!"
type Access {
    doors: [Door!]!
    features: [Feature!]!
}

input AccessInput {
    doors: [Door!]!
    features: [Feature!]!
}

enum AccessResourceType {
    door
    feature
}

"""This represets all doors that E-sektionen own"""
enum Door {
    cm,
    sikrit,
    biljard,
    led,
    bd,
    ulla,
    ekea,
    arkivet,
    hk,
    pump,
    pa,
    km
}

"""Features are used for mapping access to a feature (ex article or election) for user or a post. This is not limited to efterphest"""
enum Feature {
    superadmin,
    post_admin,
    article_editor,
    news_editor,
    election_admin,
    access_admin
}
