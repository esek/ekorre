# import Post, UserPostHistoryEntry from 'post.graphql'
# import Access from 'access.graphql'

scalar Date

type Query {
  user(username: String!): User
  searchUser(search: String!): [User!]!
  me: User!
  numberOfMembers: Int!
}

type Mutation {
  createUser(input: NewUser!): User!
  updateUser(input: UpdateUser!): User!
  requestPasswordReset(username: String!): Boolean!
  validatePasswordResetToken(username: String!, token: String!): Boolean!
  resetPassword(username: String!, token: String!, password: String!): Boolean!
  casCreateUser(input: NewUser!, hash: String!): User!
}

type User { 
  username: String!

  firstName: String!
  lastName: String!

  photoUrl: String
  email: String!
  phone: String

  address: String
  zipCode: String
  website: String

  class: String!

  """
  Currents posts held by this user
  """
  posts: [Post!]!

  """
  Past and current posts held by this user
  """
  userPostHistory: [UserPostHistoryEntry]!
  wikiEdits: Int!
}

input NewUser {
  username: String!
  firstName: String!
  lastName: String!
  class: String!
  email: String
  password: String!
}

input UpdateUser {
  firstName: String
  lastName: String
  phone: String
  email: String
  address: String
  zipCode: String
  website: String
}