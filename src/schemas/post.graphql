# import User from 'user.graphql'
# import Access from 'access.graphql'
# import Utskott from 'utskott.graphql'

scalar Date

type Query {
    post(name: String!): Post
    posts(utskott: Utskott, includeInactive: Boolean!): [Post]
    groupedPosts(includeInactive: Boolean!): [GroupedPost]!
}

type Mutation {
    addPost(info: NewPost!): Boolean!
    modifyPost(info: ModifyPost!): Boolean!
    addUsersToPost(usernames: [String!]!, postname: String!, period: Int!): Boolean!
    removeUsersFromPost(usernames: [String!]!, postname: String!): Boolean!
    activatePost(postname: String!): Boolean!
    deactivatePost(postname: String!): Boolean!
}

type Post {
    postname: String!
    utskott: Utskott!
    postType: PostType!

    """
    Hur många platser en post har.
    `-1` symboliserar godtyckligt antal
    """
    spots: Int!
    description: String!
    active: Boolean!
    access: Access!

    """
    Om sökande valbereds och kallas till intervju
    """
    interviewRequired: Boolean
    history: [HistoryEntry!]!
}

type GroupedPost {
    utskott: Utskott!
    posts: [Post!]!
}

input NewPost {
    name: String!
    utskott: Utskott!
    postType: PostType!

    """
    Hur många platser en post har.
    `-1` symboliserar godtyckligt antal
    """
    spots: Int
    description: String

    """
    Om sökande valbereds och kallas till intervju
    """
    interviewRequired: Boolean
}

input ModifyPost {
    name: String!
    utskott: Utskott
    postType: PostType

    """
    Hur många platser en post har.
    `-1` symboliserar godtyckligt antal
    """
    spots: Int
    description: String

    """
    Om sökande valbereds och kallas till intervju
    """
    interviewRequired: Boolean
}

type HistoryEntry {
    postname: String!
    holder: User!
    start: Date!
    end: Date
}

type UserPostHistoryEntry {
  post: Post!
  start: Date!
  end: Date
}

"Hur en post tillsätts enligt Reglementet"
enum PostType {
    """
    Unik, finns bara 1, t.ex. utskottsordförande
    """
    U

    """
    Erfoderligt antal, dvs. så många som anses
    passande
    """
    EA

    """
    Upp till _n_ stycken
    """
    N

    """
    Exakt _n_ stycken
    """
    EXACT_N
}