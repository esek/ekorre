scalar DateTime

type Query {
  hehe(number: Int!, year: Int!): Hehe!
  hehes(year: Int!): [Hehe!]!
  latestHehe(limit: Int, sortOrder: SortOrder): [Hehe!]!
  paginatedHehes(limit: Int!, offset: Int, sortOrder: SortOrder): [Hehe!]!
}

type Mutation {
  addHehe(fileId: ID!, number: Int!, year: Int!): Boolean!
  removeHehe(number: Int!, year: Int!): Boolean!
}

type Hehe {
  number: Int!
  year: Int!
  uploadedAt: DateTime!
  uploader: User!
  file: File!
  coverEndpoint: String!
  coverId: String!
}

enum SortOrder {
  asc,
  desc
}