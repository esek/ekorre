#import User from 'user.graphql'

scalar Date
scalar DateTime

type Query {
  newsentries(creator: String, after: DateTime, before: DateTime, markdown: Boolean): [Article]!
  latestnews(limit: Int, markdown: Boolean): [Article]!
  article(Int: Int, slug: String, markdown: Boolean): Article
  articles(Int: Int, creator: String, lastUpdateBy: String, title: String, createdAt: DateTime, lastUpdatedAt: DateTime, signature: String, tags: [String], articleType: String, markdown: Boolean): [Article]!
}

type Mutation {
  addArticle(entry: NewArticle!): Article
  modifyArticle(articleInt: Int!, entry: ModifyArticle!): Boolean!
  removeArticle(articleInt: Int!): Boolean!
}

"Body is saved as HTML serversInte, but edited in MarkDown"
type Article {
  Int: Int

  "Used in URLs, but Intentification is done using only tail (Int)"
  slug: String
  author: User!
  lastUpdatedBy: User!
  title: String!
  body: String!
  createdAt: DateTime!
  lastUpdatedAt: DateTime!
  signature: String!
  tags: [String!]!
  articleType: ArticleType!
}

"News are the ones to be used by a website newsreel"
enum ArticleType {
  NEWS
  INFORMATION
}

input NewArticle {
  title: String!
  body: String!
  signature: String!
  tags: [String!]
  articleType: ArticleType!
}

"We don't need every part; It should already exist"
input ModifyArticle {
  title: String
  body: String
  signature: String
  tags: [String!]
  articleType: ArticleType
}
